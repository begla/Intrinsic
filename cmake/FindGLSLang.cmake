# Locate the GLSLang library

FIND_PATH(GLSLang_ROOT_DIR glslang/MachineIndependent/glslang_tab.cpp.h
  PATHS
  ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/glslang
)

IF(NOT GLSLang_ROOT_DIR)
  MESSAGE(FATAL_ERROR "cannot find glslang package; forgot submodule update --init?") 
ELSE()
  ADD_SUBDIRECTORY(${GLSLang_ROOT_DIR})

  SET(GLSLang_LIBRARY_DEBUG   glslangd)
  SET(GLSLang_LIBRARY_RELEASE glslang)
  SET(GLSLang_LIBRARY_HLSL_DEBUG   HLSLd)
  SET(GLSLang_LIBRARY_HLSL_RELEASE HLSL)
  SET(GLSLang_LIBRARY_OGL_DEBUG   OGLCompilerd)
  SET(GLSLang_LIBRARY_OGL_RELEASE OGLCompiler)
  SET(GLSLang_LIBRARY_OSDEP_DEBUG   OSDependentd)
  SET(GLSLang_LIBRARY_OSDEP_RELEASE OSDependent)
  SET(GLSLang_LIBRARY_SPIRV_DEBUG   SPIRVd)
  SET(GLSLang_LIBRARY_SPIRV_RELEASE SPIRV)

  SET(GLSLang_LIBRARIES
    debug ${GLSLang_LIBRARY_DEBUG}
    debug ${GLSLang_LIBRARY_HLSL_DEBUG}
    debug ${GLSLang_LIBRARY_OGL_DEBUG}
    debug ${GLSLang_LIBRARY_OSDEP_DEBUG}
    debug ${GLSLang_LIBRARY_SPIRV_DEBUG}
    optimized ${GLSLang_LIBRARY_RELEASE}
    optimized ${GLSLang_LIBRARY_HLSL_RELEASE}
    optimized ${GLSLang_LIBRARY_OGL_RELEASE}
    optimized ${GLSLang_LIBRARY_OSDEP_RELEASE}
    optimized ${GLSLang_LIBRARY_SPIRV_RELEASE}
  )

  INCLUDE(FindPackageHandleStandardArgs)
  FIND_PACKAGE_HANDLE_STANDARD_ARGS(GLSLang DEFAULT_MSG
    GLSLang_ROOT_DIR
    GLSLang_LIBRARY_DEBUG
    GLSLang_LIBRARY_HLSL_DEBUG
    GLSLang_LIBRARY_OGL_DEBUG
    GLSLang_LIBRARY_OSDEP_DEBUG
    GLSLang_LIBRARY_SPIRV_DEBUG
    GLSLang_LIBRARY_RELEASE
    GLSLang_LIBRARY_HLSL_RELEASE
    GLSLang_LIBRARY_OGL_RELEASE
    GLSLang_LIBRARY_OSDEP_RELEASE 
    GLSLang_LIBRARY_SPIRV_RELEASE
  )

  MARK_AS_ADVANCED(
    GLSLang_ROOT_DIR
    GLSLang_LIBRARIES
    GLSLang_LIBRARY_DEBUG
    GLSLang_LIBRARY_RELEASE
    GLSLang_LIBRARY_HLSL_DEBUG
    GLSLang_LIBRARY_OGL_DEBUG
    GLSLang_LIBRARY_OSDEP_DEBUG
    GLSLang_LIBRARY_SPIRV_DEBUG
    GLSLang_LIBRARY_HLSL_RELEASE
    GLSLang_LIBRARY_OGL_RELEASE
    GLSLang_LIBRARY_OSDEP_RELEASE
    GLSLang_LIBRARY_SPIRV_RELEASE
  )
ENDIF()
